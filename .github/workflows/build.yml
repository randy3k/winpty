name: build

on: push

jobs:
  mysys2:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [32, 64]
    steps:
      - uses: actions/checkout@v1
      - name: Cache msys2
        id: cache-msys2
        uses: actions/cache@v1
        with:
          path: msys${{ matrix.arch }}
          key: msys2-x${{ matrix.arch }}
      - name: Install msys2
        if: steps.cache-msys2.outputs.cache-hit != 'true'
        run: |
          if ( "${{ matrix.arch }}" -eq "32" ) {
            (New-Object net.webclient).DownloadFile("http://repo.msys2.org/distrib/i686/msys2-base-i686-20190524.tar.xz","msys2.tar.xz")
          } else {
            (New-Object net.webclient).DownloadFile("http://repo.msys2.org/distrib/x86_64/msys2-base-x86_64-20190524.tar.xz","msys2.tar.xz")
          }
          tar xf msys2.tar.xz -C $env:GITHUB_WORKSPACE.Replace("\", "/")
      - run: |
          $env:MSYSTEM = "MINGW${{ matrix.arch }}"
          $env:MSYS2_PATH_TYPE = "strict"
          $script = @'
            uname -m
            uname -a
            echo $PATH
          '@
          & "$env:GITHUB_WORKSPACE\msys${{ matrix.arch }}\usr\bin\bash" -c -l $script
      - name: Pacman
        run: |
          $env:MSYSTEM = "MINGW${{ matrix.arch }}"
          $env:MSYS2_PATH_TYPE = "strict"
          $script = @'
            # pacman --noconfirm -Syu
            pacman --noconfirm -S msys/gcc
            if [ "$MSYSTEM" = "MINGW32" ]; then
              pacman --noconfirm -S mingw32/mingw-w64-i686-gcc
            else
              pacman --noconfirm -S mingw64/mingw-w64-x86_64-gcc
            fi
            pacman --noconfirm -S make
          '@
          & "$env:GITHUB_WORKSPACE\msys${{ matrix.arch }}\usr\bin\bash" -c -l $script
      - name: Build
        run: |
          $env:MSYSTEM = "MINGW${{ matrix.arch }}"
          $env:MSYS2_PATH_TYPE = "strict"
          $script = @'
            cd $OLDPWD
            ./configure
            make
            make install PREFIX=dist
          '@
          & "$env:GITHUB_WORKSPACE\msys${{ matrix.arch }}\usr\bin\bash" -c -l $script
          tar -C ./dist -czvf winpty.tar.gz ./
      - uses: actions/upload-artifact@v1
        with:
          name: winpty-x${{ matrix.arch }}
          path: dist
      - name: Upload binaries to release
        if: startsWith(github.event.ref, 'refs/tags/')
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file:  winpty.tar.gz
          asset_name: winpty-x${{ matrix.arch }}.tar.gz
          tag: ${{ github.ref }}
